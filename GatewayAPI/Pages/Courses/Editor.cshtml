
@page "{id}/{idItem?}"
@model GatewayAPI.Pages.Courses.EditorModel
@{
    ViewData["Title"] = $"{Model.CurrentCourse.Title}";
    var currentCourseItemValues = new Dictionary<string, string> {
                    { "id", Model.CurrentCourse.Id },
                    { "order", (Model.CourseItems.Count + 1).ToString() }
    };
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/site.css" rel="stylesheet" asp-append-version="true">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css">
    <link rel="stylesheet" href="~/node_modules/easymde/dist/easymde.min.css">
    <link rel="stylesheet" href="~/css/easymde.css">


</head>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>
    <script src="~/node_modules/easymde/dist/easymde.min.js"></script>
    <script>
                function showMessage(message) {
            const msgElement = document.createElement('div');
            msgElement.textContent = message;
            msgElement.style.position = 'fixed';
            msgElement.style.bottom = '20px';
            msgElement.style.right = '20px';
            msgElement.style.padding = '15px 25px';
            msgElement.style.backgroundColor = '#fff';
            msgElement.style.color = 'black';
            msgElement.style.borderRadius = '5px';
            msgElement.style.boxShadow = '0 2px 10px rgba(0,0,0,0.2)';
            msgElement.style.zIndex = '1000';
            msgElement.style.animation = 'fadein 0.5s, fadeout 0.5s 2.5s forwards';

            document.body.appendChild(msgElement);

            setTimeout(() => {
                msgElement.remove();
            }, 3000);
        }
        document.addEventListener("DOMContentLoaded", function () {
            const content = @Html.Raw(Json.Serialize(Model.Contents != null && Model.Contents.Count > 0 ? Model.Contents.First().Data : ""));


            const element = document.getElementById("easymde");

            const editor = new EasyMDE({
            element: element,
            spellChecker: false
            });
            //const editor = new EasyMDE(element);
            if (content) {
            editor.value(content);
            }

            const toolbar = document.querySelector('.editor-toolbar');
            const newParent = document.querySelector('.sidebar.right-sidebar');
            const referenceElement = document.getElementById('saveAllBtn');
            newParent.insertBefore(toolbar, referenceElement);

            document.getElementById('saveAllBtn').addEventListener('click', async function () {
                const courseItemId = document.getElementById('courseItemId').value;
                const courseItemTitle = document.getElementById('courseItemTitle').value;
                const courseItemType = document.getElementById('courseItemType').value;

                const contentId = document.getElementById('mainContentId').value;
                const contentType = "Base";
                const contentData = editor.value();



                const content = {
                Id: contentId,
                Type: contentType,
                Data: contentData,
                Order: 0,
                CourseItemId: courseItemId
                };
                const courseItem = {
                Id: courseItemId,
                Title: courseItemTitle,
                Type: courseItemType
                }

                const data = {
                Content: content,
                CourseItem: courseItem
                };

                const response = await fetch('?handler=SaveData', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(data)
                });
                console.log('Raw response:', response);
                if(response.ok){
                   showMessage('Данные успешно сохранены!');
                }else{
                   showMessage('Ошибка! Данные не сохранены!');
                }


            });

        });
    </script>

    <script type="text/javascript" src="/js/editor.js"></script>


}

<div class="course-main">
    <!-- Левая панель с модулями -->
    <div class="sidebar-wrapper">
        <div class="sidebar left-sidebar">
            <div class="text-center medium">Модули курса</div>
            <div>
                <div class="module-list">
                    @for(int i = 0; i<Model.CourseItems.Count; i++){
                        <div class="module-item-container">
                            <a href="/courses/editor/@Model.CurrentCourse.Id/@Model.CourseItems[i].Id"
                            class="module-item">
                                @(i+1). @Model.CourseItems[i].Title
                            </a>
                            <div class="module-actions">
                                <button class="module-menu-btn" id="@Model.CourseItems[i].Id">⋮</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <button id="addModuleBtn" class="btn btn-sm btn-outline-secondary btn-col">Добавить модуль</button>
            <button id="updateCourseBtn" class="btn btn-sm btn-outline-secondary btn-col">Изменить курс</button>
        </div>
    </div>
    <!-- Основная область контента -->
    <div class="main-content" >
        @if (!ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewContext.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        @if (Model.CurrentCourseItem != null)
        {
            <form method="post"
            asp-all-route-data="currentCourseItemValues">
                <input hidden id="courseItemId" value="@Model.CurrentCourseItem.Id" />
                <input hidden id="mainContentId" value="@(Model.Contents.Count > 0 ? Model.Contents.First().Id : "")" />
                <div class="form-group">
                    <input id="courseItemTitle" asp-for="CurrentCourseItem.Title" class="borderless-input large form-control" placeholder="Название модуля" />
                </div>
                <div class="form-group">
                    <input id="courseItemType" asp-for="CurrentCourseItem.Type" list="itemsList" class="borderless-input medium form-control" placeholder="Тип модуля" />
                    <datalist id="itemsList">
                        <option value="Лекция">Лекция</option>
                        <option value="Практика">Практика</option>
                        <option value="Тест">Тест</option>
                    </datalist>
                </div>

            </form>
            <textarea id="easymde"></textarea>



            <div id="@Model.CurrentCourseItem.Id" class="content-container">
                @if (false)
                {
                    @foreach (var content in Model.Contents)
                    {
                        <div class="content-item" id="@content.Id">

                            @if (content.Type == "Text")
                            {
                                <div class="text-content">@content.Data</div>
                            }
                            else if (content.Type == "Image")
                            {
                                <img data-src="@content.Data" class="img-fluid">
                            }
                            else if (content.Type == "Video")
                            {
                                <iframe width="560"
                                height="315"
                                src="http://www.youtube.com/embed/fxCEcPxUbYA"
                                frameborder="0"
                                allowfullscreen></iframe>
                            }
                            else if (content.Type == "Code")
                            {
                                <div class="code-content">
                                    <pre><code class="language-code">@content.Data</code></pre>
                                    <div class="code-language-badge">code</div>
                                </div>
                            }
                            else
                            {
                                <div class="text-content">@content.Data</div>
                            }
                            <button class="btn btn-sm btn-outline-danger" onclick="this.closest('div').remove()">
                                Удалить
                            </button>
                            <!-- Другие типы контента -->
                        </div>
                    }
                }

            </div>

        }
        else
        {
            <div class="large">Пока что тут пусто. Создайте новый модуль!</div>
        }
    </div>
    <div class="sidebar-wrapper">
        <div class="sidebar right-sidebar">
            @if (Model.CurrentCourseItem != null)
            {
@*                 <button class="btn btn-sm btn-outline-primary add-content" data-type="Text">
                    Текст
                </button>
                <button class="btn btn-sm btn-outline-primary add-content" data-type="Image">
                    Изображение
                </button>
                <button class="btn btn-sm btn-outline-primary add-content" data-type="Video">
                    Видео
                </button>
                <button class="btn btn-sm btn-outline-primary add-content" data-type="Code">
                    Код
                </button> *@
                <button id="saveAllBtn" class="btn btn-sm btn-outline-success">Сохранить</button>
            }
        </div>
    </div>
</div>

<!-- Модальное окно создания модуля -->
<div class="modal fade" id="moduleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="display-6">Создание модуля</h4>
            </div>

            <form id="moduleForm" method="post"
            asp-all-route-data="currentCourseItemValues"
            asp-page-handler="CreateCourseItem">

                <div class="modal-body">
                    <div class="form-group">
                        <label>Название модуля</label>
                        <input id="newCourseItemTitle" asp-for="NewCourseItem.Title" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Тип модуля</label>
                        <input id="newCourseItemType" asp-for="NewCourseItem.Type"  list="itemsList" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button class="btn btn-primary" data-bs-dismiss="modal">Создать</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="courseModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="display-6">Изенение курса</h4>
            </div>

            <form id="moduleForm" method="post"
                  asp-page-handler="UpdateCourse">
                <input hidden id="courseId" name="courseId" asp-for="CurrentCourse.Id" class="form-control" />
                <div class="modal-body">
                    <div class="form-group">
                        <label>Название курса</label>
                        <input id="currentCourseTitle" name="currentCourseTitle" asp-for="_CurrentCourse.Title" value="@Model.CurrentCourse.Title" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Тип курса</label>
                        <input id="currentCourseDescription" name="currentCourseDescription" asp-for="_CurrentCourse.Description" value="@Model.CurrentCourse.Description" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary">Изменить</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Модальное окно создания контента -->
<div class="modal fade" id="contentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Добавить контент</h5>
            </div>
            <form id="contentForm" method="post" >
                <div class="modal-body">
                    <input type="hidden" name="Type" id="contentType">
                    <div class="form-group">
                        <label id="contentLabel">Текст</label>
                        <textarea name="Data" class="form-control" id="contentData" rows="5"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button id="create-content" class="btn btn-primary" data-bs-dismiss="modal">Добавить</button>
                </div>
            </form>
        </div>
    </div>
</div>


